#include <iostream>
#include <rapidjson/document.h>
#include <rapidjson/stringbuffer.h>
#include <rapidjson/writer.h>
#include <tinyxml2.h>

using namespace std;
using namespace rapidjson;
using namespace tinyxml2;

void jsonToXml(const Value& jsonValue, XMLNode* xmlNode, XMLDocument& xmlDoc) {
    if (jsonValue.IsObject()) {
        for (Value::ConstMemberIterator itr = jsonValue.MemberBegin(); itr != jsonValue.MemberEnd(); ++itr) {
            XMLNode* childXmlNode = xmlDoc.NewElement(itr->name.GetString());
            xmlNode->InsertEndChild(childXmlNode);
            jsonToXml(itr->value, childXmlNode, xmlDoc);
        }
    } else if (jsonValue.IsArray()) {
        for (Value::ConstValueIterator itr = jsonValue.Begin(); itr != jsonValue.End(); ++itr) {
            XMLNode* childXmlNode = xmlDoc.NewElement("item");
            xmlNode->InsertEndChild(childXmlNode);
            jsonToXml(*itr, childXmlNode, xmlDoc);
        }
    } else if (jsonValue.IsString()) {
        XMLText* textNode = xmlDoc.NewText(jsonValue.GetString());
        xmlNode->InsertEndChild(textNode);
    } else if (jsonValue.IsNumber()) {
        XMLText* textNode = xmlDoc.NewText(to_string(jsonValue.GetDouble()).c_str());
        xmlNode->InsertEndChild(textNode);
    } else if (jsonValue.IsBool()) {
        XMLText* textNode = xmlDoc.NewText(jsonValue.GetBool() ? "true" : "false");
        xmlNode->InsertEndChild(textNode);
    }
}

string convertJsonToXml(const string& json) {
    Document document;
    document.Parse(json.c_str());

    XMLDocument xmlDoc;
    XMLNode* rootNode = xmlDoc.NewElement("root");
    xmlDoc.InsertEndChild(rootNode);

    jsonToXml(document, rootNode, xmlDoc);

    XMLPrinter printer;
    xmlDoc.Accept(&printer);

    return printer.CStr();
}

int main() {
    // Sample JSON input
    string json = R"(
        {
            "name": "John Doe",
            "age": 30,
            "isStudent": false,
            "address": {
                "street": "123 Main St",
                "city": "New York"
            },
            "languages": ["C++", "Python", "JavaScript"]
        }
    )";

    // Convert JSON to XML
    string xml = convertJsonToXml(json);

    // Print the resulting XML
    cout << xml << endl;

    return 0;
}
